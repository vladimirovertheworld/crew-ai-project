#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to handle errors
handle_error() {
    echo -e "${RED}Error: $1${NC}"
    exit 1
}

# Function to handle warnings
handle_warning() {
    echo -e "${YELLOW}Warning: $1${NC}"
}

# Function to prompt user for action
prompt_user() {
    read -p "$1 (y/n): " response
    case $response in
        [Yy]* ) return 0 ;;
        * ) return 1 ;;
    esac
}

# Function to check SSH key
check_ssh_key() {
    if [ ! -f ~/.ssh/id_rsa.pub ]; then
        handle_warning "No SSH key found. Setting up SSH key..."
        ssh-keygen -t rsa -b 4096 -C "$(git config user.email)" || handle_error "Failed to generate SSH key"
        echo -e "${GREEN}SSH key generated successfully.${NC}"
    fi
    
    echo -e "${BLUE}Your public SSH key is:${NC}"
    cat ~/.ssh/id_rsa.pub
    
    if prompt_user "Have you added this SSH key to your GitHub account?"; then
        echo -e "${GREEN}Great! Proceeding with repository setup.${NC}"
    else
        echo -e "${YELLOW}Please add your SSH key to your GitHub account before proceeding:${NC}"
        echo "1. Go to https://github.com/settings/keys"
        echo "2. Click 'New SSH key'"
        echo "3. Paste your key and give it a title"
        if prompt_user "Do you want to open the GitHub SSH key settings page?"; then
            if command_exists xdg-open; then
                xdg-open "https://github.com/settings/keys"
            elif command_exists open; then
                open "https://github.com/settings/keys"
            else
                echo "Please manually open: https://github.com/settings/keys"
            fi
        fi
        if ! prompt_user "Have you added the SSH key to your GitHub account now?"; then
            handle_error "SSH key must be added to GitHub to proceed. Please add the key and run the script again."
        fi
    fi
}

# Check if git is installed
if ! command_exists git; then
    handle_error "git is not installed. Please install git and try again."
fi

# Check SSH key
check_ssh_key

# Check if current directory is already a git repository
if [ -d .git ]; then
    if prompt_user "This directory is already a git repository. Do you want to reinitialize it?"; then
        rm -rf .git || handle_error "Failed to remove existing .git directory"
    else
        echo "Exiting without changes."
        exit 0
    fi
fi

# Initialize git repository
git init || handle_error "Failed to initialize git repository"
echo -e "${GREEN}Git repository initialized successfully.${NC}"

# Ask for GitHub repository URL
while true; do
    read -p "Enter your GitHub repository URL (SSH format: git@github.com:username/repository.git): " repo_url
    if [[ $repo_url =~ ^git@github\.com:.+/.+\.git$ ]]; then
        break
    else
        handle_warning "Invalid GitHub repository URL. It should be in the SSH format: git@github.com:username/repository.git"
    fi
done

# Add remote origin
git remote add origin $repo_url || handle_error "Failed to add remote origin"
echo -e "${GREEN}Remote origin added successfully.${NC}"

# Create initial commit
git add . || handle_warning "Failed to stage files"
git commit -m "Initial commit" || {
    handle_warning "Failed to create initial commit. Attempting to configure git user..."
    read -p "Enter your Git username: " git